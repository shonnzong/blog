<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ShonnZong的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://140.143.243.43/"/>
  <updated>2019-02-24T17:42:30.510Z</updated>
  <id>http://140.143.243.43/</id>
  
  <author>
    <name>ShonnZong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HBJ-ERP-项目展示</title>
    <link href="http://140.143.243.43/2019/02/25/HBJ-ERP-%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    <id>http://140.143.243.43/2019/02/25/HBJ-ERP-项目展示/</id>
    <published>2019-02-24T17:39:00.000Z</published>
    <updated>2019-02-24T17:42:30.510Z</updated>
    
    <content type="html"><![CDATA[<p>部分代码展示：<br><img src="/images/hbj-erp-c.png" alt="hbj-erp-c"><br><img src="/images/hbj-erp-s.jpg" alt="hbj-erp-s"><br><img src="/images/hbj-erp-l.jpg" alt="hbj-erp-l"></p><p>接口展示：<br><img src="/images/hbj-erp-postman.jpg" alt="hbj-erp-postman"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;部分代码展示：&lt;br&gt;&lt;img src=&quot;/images/hbj-erp-c.png&quot; alt=&quot;hbj-erp-c&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/hbj-erp-s.jpg&quot; alt=&quot;hbj-erp-s&quot;&gt;&lt;br&gt;&lt;img src=&quot;/images/hb
      
    
    </summary>
    
      <category term="项目展示" scheme="http://140.143.243.43/categories/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
    
      <category term="项目展示" scheme="http://140.143.243.43/tags/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>得力之家-项目展示</title>
    <link href="http://140.143.243.43/2019/02/25/%E5%BE%97%E5%8A%9B%E4%B9%8B%E5%AE%B6-%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    <id>http://140.143.243.43/2019/02/25/得力之家-项目展示/</id>
    <published>2019-02-24T16:20:34.000Z</published>
    <updated>2019-02-24T17:14:48.805Z</updated>
    
    <content type="html"><![CDATA[<p>项目展示：<br><a href="/files/得力之家APP.pptx">得力之家APP.pptx</a></p><p>展示地址：<br><a href="http://140.143.243.43:6680/admin" target="_blank">GO</a><br>账号：sysadmin<br>密码：ysz1002</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目展示：&lt;br&gt;&lt;a href=&quot;/files/得力之家APP.pptx&quot;&gt;得力之家APP.pptx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;展示地址：&lt;br&gt;&lt;a href=&quot;http://140.143.243.43:6680/admin&quot; target=&quot;_blank&quot;&gt;GO&lt;/a&gt;
      
    
    </summary>
    
      <category term="项目展示" scheme="http://140.143.243.43/categories/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
    
      <category term="项目展示" scheme="http://140.143.243.43/tags/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>中小型企业服务管理平台-项目展示</title>
    <link href="http://140.143.243.43/2019/02/25/%E4%B8%AD%E5%B0%8F%E5%9E%8B%E4%BC%81%E4%B8%9A%E6%9C%8D%E5%8A%A1%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0-%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    <id>http://140.143.243.43/2019/02/25/中小型企业服务管理平台-项目展示/</id>
    <published>2019-02-24T16:14:15.000Z</published>
    <updated>2019-02-24T16:19:21.608Z</updated>
    
    <content type="html"><![CDATA[<p>项目展示：<br><a href="/files/中小型企业服务管理平台.docx">中小型企业服务管理平台docx</a></p><p>后台管理页面：<br><img src="/images/dcoa.jpg" alt="dcoa"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目展示：&lt;br&gt;&lt;a href=&quot;/files/中小型企业服务管理平台.docx&quot;&gt;中小型企业服务管理平台docx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;后台管理页面：&lt;br&gt;&lt;img src=&quot;/images/dcoa.jpg&quot; alt=&quot;dcoa&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="项目展示" scheme="http://140.143.243.43/categories/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
    
      <category term="项目展示" scheme="http://140.143.243.43/tags/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>智能oa移动办公管理系统-项目展示</title>
    <link href="http://140.143.243.43/2019/02/24/%E6%99%BA%E8%83%BDoa%E7%A7%BB%E5%8A%A8%E5%8A%9E%E5%85%AC%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F-%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    <id>http://140.143.243.43/2019/02/24/智能oa移动办公管理系统-项目展示/</id>
    <published>2019-02-24T15:57:58.000Z</published>
    <updated>2019-02-24T16:01:14.119Z</updated>
    
    <content type="html"><![CDATA[<p>项目展示：<br><a href="/files/智能OA办公管理系统.pptx">智能OA办公管理系统PPT</a></p><p><strong>注意</strong><br>展示地址：<br><a href="http://qjoa.nbdeli.net" target="_blank" rel="noopener">GO</a><br>账号：见展示地址登录页<br>密码：默认123456</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目展示：&lt;br&gt;&lt;a href=&quot;/files/智能OA办公管理系统.pptx&quot;&gt;智能OA办公管理系统PPT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;br&gt;展示地址：&lt;br&gt;&lt;a href=&quot;http://qjoa.nbdeli.net&quot; targe
      
    
    </summary>
    
      <category term="项目展示" scheme="http://140.143.243.43/categories/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
    
      <category term="项目展示" scheme="http://140.143.243.43/tags/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>普惠金融服务平台-项目展示</title>
    <link href="http://140.143.243.43/2019/02/24/%E6%99%AE%E6%83%A0%E9%87%91%E8%9E%8D%E6%9C%8D%E5%8A%A1%E5%B9%B3%E5%8F%B0-%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    <id>http://140.143.243.43/2019/02/24/普惠金融服务平台-项目展示/</id>
    <published>2019-02-24T15:41:22.000Z</published>
    <updated>2019-02-24T15:47:25.196Z</updated>
    
    <content type="html"><![CDATA[<p>项目展示：<br><a href="/files/普惠服务平台.pptx">普惠服务平台项目展示PPT</a></p><p>后台管理登录页：<br><img src="/images/puhui_admin.png" alt="puhui_admin"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目展示：&lt;br&gt;&lt;a href=&quot;/files/普惠服务平台.pptx&quot;&gt;普惠服务平台项目展示PPT&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;后台管理登录页：&lt;br&gt;&lt;img src=&quot;/images/puhui_admin.png&quot; alt=&quot;puhui_admin&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="项目展示" scheme="http://140.143.243.43/categories/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
    
      <category term="项目展示" scheme="http://140.143.243.43/tags/%E9%A1%B9%E7%9B%AE%E5%B1%95%E7%A4%BA/"/>
    
  </entry>
  
  <entry>
    <title>linux下docker下Nginx+Php+Mysql+Redis+Elasticsearch开发环境搭建</title>
    <link href="http://140.143.243.43/2019/02/24/linux%E4%B8%8Bdocker%E4%B8%8BNginx-Php-Mysql-Redis-Elasticsearch%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://140.143.243.43/2019/02/24/linux下docker下Nginx-Php-Mysql-Redis-Elasticsearch开发环境搭建/</id>
    <published>2019-02-24T12:55:22.000Z</published>
    <updated>2019-02-24T14:43:44.552Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-docker-安装"><a href="#1-docker-安装" class="headerlink" title="1 docker 安装"></a>1 docker 安装</h3><h4 id="ubuntu-14-x-15-x"><a href="#ubuntu-14-x-15-x" class="headerlink" title="ubuntu 14.x 15.x"></a>ubuntu 14.x 15.x</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">curl -sSL https://get.docker.io/ | sudo sh</span><br></pre></td></tr></table></figure><h4 id="centos-6-x-7-x"><a href="#centos-6-x-7-x" class="headerlink" title="centos 6.x 7.x"></a>centos 6.x 7.x</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br><span class="line">curl -sSL https://get.docker.io/ | sudo sh</span><br></pre></td></tr></table></figure><h4 id="如果安装出现错误"><a href="#如果安装出现错误" class="headerlink" title="如果安装出现错误"></a>如果安装出现错误</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FATA[0000] Error loading docker apparmor profile: fork/<span class="built_in">exec</span> /sbin/apparmor_parser: no such file or directory () ;</span><br></pre></td></tr></table></figure><p>安装apparmor软件即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install apparmor</span><br></pre></td></tr></table></figure><p>下面需要创建用户和所属用户组，根据1.4 设置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning: The docker group is equivalent to the root user; For details on how this impacts security <span class="keyword">in</span> your system, see Docker Daemon Attack Surface <span class="keyword">for</span> details.</span><br></pre></td></tr></table></figure><h4 id="设置用户和组"><a href="#设置用户和组" class="headerlink" title="设置用户和组"></a>设置用户和组</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo useradd -g docker docker</span><br><span class="line">sudo usermod -aG docker docker</span><br></pre></td></tr></table></figure><h3 id="2-docker-启动"><a href="#2-docker-启动" class="headerlink" title="2 docker 启动"></a>2 docker 启动</h3><h4 id="旧启动方式"><a href="#旧启动方式" class="headerlink" title="旧启动方式"></a>旧启动方式</h4><p>centos 6.x ,ubuntu 14.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service docker start</span><br></pre></td></tr></table></figure><h4 id="新的启动方式"><a href="#新的启动方式" class="headerlink" title="新的启动方式"></a>新的启动方式</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h4 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos 7.x ,ubuntu 15.x</span></span><br><span class="line">sudo systemctl stop docker</span><br><span class="line">或</span><br><span class="line"><span class="comment">#centos 6.x ,ubuntu 14.x</span></span><br><span class="line">sudo service docker stop</span><br></pre></td></tr></table></figure><h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos 7.x ,ubuntu 15.x</span></span><br><span class="line">sudo systemctl restart docker</span><br><span class="line">或</span><br><span class="line"><span class="comment">#centos 6.x ,ubuntu 14.x</span></span><br><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure><h4 id="docker状态"><a href="#docker状态" class="headerlink" title="docker状态"></a>docker状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#centos 7.x ,ubuntu 15.x</span></span><br><span class="line">sudo systemctl status docker</span><br><span class="line">或</span><br><span class="line"><span class="comment">#centos 6.x ,ubuntu 14.x</span></span><br><span class="line">sudo service docker status</span><br></pre></td></tr></table></figure><h4 id="docker-版本"><a href="#docker-版本" class="headerlink" title="docker 版本"></a>docker 版本</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker -v</span><br></pre></td></tr></table></figure><h3 id="3-相关配置"><a href="#3-相关配置" class="headerlink" title="3 相关配置"></a>3 相关配置</h3><p>配置文件增加参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/default/docker</span><br></pre></td></tr></table></figure><p>在配置文件中添加或修改</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER=<span class="string">"/usr/bin/docker"</span></span><br></pre></td></tr></table></figure><p>增加完成后，重启docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h3 id="4-镜像拉取"><a href="#4-镜像拉取" class="headerlink" title="4 镜像拉取"></a>4 镜像拉取</h3><p>注意：<br>如果拉取时间过长，docker hub 会自动切断链接，它会报超时错误！<br>这个时候再重新执行拉取命令即可，他会接着上次拉取断的位置重新拉取的</p><h4 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#来自 https://hub.docker.com/_/mysql/</span></span><br><span class="line">sudo docker pull mysql:5.6</span><br></pre></td></tr></table></figure><p>拉取时间根据每人的网速有关<br>项目都是根据 mysql 5.6 版本的，所以这里选择5.6版本<br>mysql:5.6 表示 镜像名称:版本号</p><h4 id="redis"><a href="#redis" class="headerlink" title="redis"></a>redis</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#来自 https://hub.docker.com/_/redis/</span></span><br><span class="line">sudo docker pull redis</span><br></pre></td></tr></table></figure><p>redis 后面没有版本号时，默认拉取最新的一版 即 redis:latest</p><h4 id="ElasticSearch"><a href="#ElasticSearch" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#来自 https://hub.docker.com/_/elasticsearch/</span></span><br><span class="line">sudo docker pull elasticsearch</span><br></pre></td></tr></table></figure><p>elasticsearch 后面没有版本号时，默认拉取最新的一版 即 elasticsearch:latest</p><h4 id="nginx-和php"><a href="#nginx-和php" class="headerlink" title="nginx 和php"></a>nginx 和php</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#来自 https://hub.docker.com/r/foxiswho/nginx-php</span></span><br><span class="line">sudo docker pull foxiswho/nginx-php</span><br></pre></td></tr></table></figure><p>lanmps 后面没有版本号时，默认拉取最新的一版 即 lanmps:latest<br>nginx 版本 1.8.0<br>php 版本 5.6.x</p><h4 id="memcached"><a href="#memcached" class="headerlink" title="memcached"></a>memcached</h4><p>有同学可能会使用这个缓存，需要的拿去<br>我们目前项目没有使用它</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#来自 https://hub.docker.com/_/memcached/</span></span><br><span class="line">sudo docker pull memcached</span><br></pre></td></tr></table></figure><h4 id="镜像拉取相关问题"><a href="#镜像拉取相关问题" class="headerlink" title="镜像拉取相关问题"></a>镜像拉取相关问题</h4><p>拉取不成功时：重新执行拉取命令</p><p>哪种为拉取不成功：repository与tag为none</p><h3 id="5-镜像查看"><a href="#5-镜像查看" class="headerlink" title="5 镜像查看"></a>5 镜像查看</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure><h3 id="6-生成容器"><a href="#6-生成容器" class="headerlink" title="6 生成容器"></a>6 生成容器</h3><h4 id="mysql-1"><a href="#mysql-1" class="headerlink" title="mysql"></a>mysql</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:5.6</span><br></pre></td></tr></table></figure><p>–name 容器名称</p><blockquote><p>mysql 为自定义名称</p></blockquote><p>-p:暴露端口，映射端口(可以映射多个端口) 外部端口容器内部端口</p><blockquote><p>-p 3306:3306 映射端口</p></blockquote><p>-e:设置任意环境变量(容器内)</p><blockquote><p>MYSQL_ROOT_PASSWORD=root 这里指 设置数据库密码为root</p></blockquote><p>mysql:5.6 镜像名称:版本</p><h4 id="redis-1"><a href="#redis-1" class="headerlink" title="redis"></a>redis</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --name redis -p 6379:6379 -d redis:latest</span><br></pre></td></tr></table></figure><p>redis 为自定义名称<br>-p 6379:6379 映射端口， 即 外部端口:容器内端口<br>redis:latest 镜像名称:版本</p><h4 id="ElasticSearch-1"><a href="#ElasticSearch-1" class="headerlink" title="ElasticSearch"></a>ElasticSearch</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --name es -p 9200:9200 -p 9300:9300 -d elasticsearch:latest</span><br></pre></td></tr></table></figure><p>es 为自定义名称<br>-p 9200:9200 映射端口(可以映射多个端口)， 即 外部端口:容器内端口<br>elasticsearch:latest 镜像名称:版本</p><h4 id="Nginx-PHP"><a href="#Nginx-PHP" class="headerlink" title="Nginx+PHP"></a>Nginx+PHP</h4><h5 id="方式一-容器内链接"><a href="#方式一-容器内链接" class="headerlink" title="方式一 容器内链接"></a>方式一 容器内链接</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name lanmps --link mysql:db --link es:es --link redis:redis -p 80:80 -v /home/lanmps/www:/www/wwwroot -d foxiswho/nginx-php</span><br></pre></td></tr></table></figure><p>–name 容器名称</p><blockquote><p>–name lanmps 名为lanmps的容器</p></blockquote><p>-p:暴露端口，映射端口(可以映射多个端口) 外部端口：容器内部端口</p><blockquote><p>-p 80:80 外部80端口:容器内部80端口</p></blockquote><p>-d:后台模式运行，如果没有则以前台运行（当前进程关闭后，当前容器自动关闭）<br>foxiswho/nginx-php 镜像名称:版本<br>–link:容器内部通信 容器名称：内部别名（内部使用）</p><blockquote><p>–link mysql:db 使用时，直接使用db 就可以访问到数据库mysql容器<br>php 访问本地mysql 使用的是localhost，容器内部即可使用 db</p></blockquote><p>-v:卷，外部目录虚拟到容器内目录 外部目录：容器内目录</p><blockquote><p>-v /home/lanmps/www:/www/wwwroot<br>/home/lanmps/www 外部目录，我的项目目录<br>/www/wwwroot 容器内部目录，这个是不能改变的</p></blockquote><p><strong>注意</strong><br>本地 目录设置权限和用户组<br>chown -R www:www /home/lanmps/www<br>chmod -R 777 /home/lanmps/www<br>这个时候访问本机 127.0.0.1:80 就可以看到 你的项目站点了</p><h5 id="方式二-使用IP端口连接"><a href="#方式二-使用IP端口连接" class="headerlink" title="方式二 使用IP端口连接"></a>方式二 使用IP端口连接</h5><p><strong>注意</strong><br>使用IP端口连接，必须是固定IP才可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name lanmps -p 80:80 -v /home/lanmps/www:/www/wwwroot -d foxiswho/nginx-php</span><br></pre></td></tr></table></figure><p>例如 本机ip 为 192.168.1.122<br>那么在链接 数据库3306 的时候，ip设置为192.168.1.122，端口号 3306</p><p><strong>注意</strong><br>本地 目录设置权限和用户组<br>chown -R www:www /home/lanmps/www<br>chmod -R 777 /home/lanmps/www<br>这个时候访问本机 127.0.0.1:80 就可以看到 你的项目站点了</p><h3 id="7-容器命令"><a href="#7-容器命令" class="headerlink" title="7 容器命令"></a>7 容器命令</h3><blockquote><p>普通情况下容器创建时，该容器就会是启动状态，如果关机了，那么就要启动该容器</p></blockquote><h4 id="容器启动"><a href="#容器启动" class="headerlink" title="容器启动"></a>容器启动</h4><p>先启动没有任何链接的容器，最后启动 有关联的容器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo docker start 容器名称</span><br><span class="line"></span><br><span class="line">sudo docker start redis</span><br><span class="line">sudo docker start mysql</span><br><span class="line">sudo docker start es</span><br><span class="line">sudo docker start lanmps</span><br></pre></td></tr></table></figure></p><h4 id="容器关闭"><a href="#容器关闭" class="headerlink" title="容器关闭"></a>容器关闭</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker stop 容器名称</span><br><span class="line"></span><br><span class="line">sudo docker stop es</span><br></pre></td></tr></table></figure><h4 id="容器重启"><a href="#容器重启" class="headerlink" title="容器重启"></a>容器重启</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker restart 容器名称</span><br><span class="line"></span><br><span class="line">sudo docker restart es</span><br></pre></td></tr></table></figure><h4 id="容器删除"><a href="#容器删除" class="headerlink" title="容器删除"></a>容器删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rm 容器名称</span><br></pre></td></tr></table></figure><p>删除所有容器<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -q -a)</span><br></pre></td></tr></table></figure></p><h4 id="进入容器内部"><a href="#进入容器内部" class="headerlink" title="进入容器内部"></a>进入容器内部</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker <span class="built_in">exec</span> -it lanmps /bin/bash</span><br></pre></td></tr></table></figure><h4 id="查看-正在运行的容器"><a href="#查看-正在运行的容器" class="headerlink" title="查看 正在运行的容器"></a>查看 正在运行的容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps</span><br></pre></td></tr></table></figure><h4 id="查看-所有容器"><a href="#查看-所有容器" class="headerlink" title="查看 所有容器"></a>查看 所有容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps -a</span><br></pre></td></tr></table></figure><h3 id="8-docker-镜像命令"><a href="#8-docker-镜像命令" class="headerlink" title="8 docker 镜像命令"></a>8 docker 镜像命令</h3><h4 id="所有镜像"><a href="#所有镜像" class="headerlink" title="所有镜像"></a>所有镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images</span><br></pre></td></tr></table></figure><h4 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker rmi lanmps</span><br></pre></td></tr></table></figure><p>删除所有镜像<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -q)</span><br></pre></td></tr></table></figure></p><h3 id="9-docker-容器导入与导出"><a href="#9-docker-容器导入与导出" class="headerlink" title="9 docker 容器导入与导出"></a>9 docker 容器导入与导出</h3><blockquote><p>导出后再导入 的镜像会丢失所有的历史</p></blockquote><h4 id="导出-export"><a href="#导出-export" class="headerlink" title="导出 export"></a>导出 export</h4><blockquote><p>Export命令用于持久化容器（不是镜像）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.先查看 所有容器</span></span><br><span class="line">sudo docker ps -a</span><br><span class="line"><span class="comment">#2.找到要导出容器 的 CONTAINER ID，然后执行命令</span></span><br><span class="line">sudo docker <span class="built_in">export</span> 容器CONTAINER ID &gt; 导出地址文件名</span><br><span class="line">即</span><br><span class="line">sudo docker <span class="built_in">export</span> 234wer2323dfdfdsfq &gt; /home/export.tar</span><br></pre></td></tr></table></figure><h4 id="导入-import"><a href="#导入-import" class="headerlink" title="导入 import"></a>导入 import</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /home/export.tar | sudo docker import - lanmps:latest</span><br></pre></td></tr></table></figure><h3 id="10-docker-镜像保存与加载"><a href="#10-docker-镜像保存与加载" class="headerlink" title="10 docker 镜像保存与加载"></a>10 docker 镜像保存与加载</h3><blockquote><p>保存后再加载（saveed-loaded）的镜像没有丢失历史和层(layer)</p></blockquote><h4 id="保存-save"><a href="#保存-save" class="headerlink" title="保存 save"></a>保存 save</h4><blockquote><p>Save命令用于持久化镜像（不是容器）</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.先查看 所有镜像</span></span><br><span class="line">sudo docker images</span><br><span class="line"><span class="comment">#2.找到要保存的镜像名称</span></span><br><span class="line">sudo docker save 镜像名称 &gt; 保存地址文件名</span><br><span class="line">即</span><br><span class="line">sudo docker save lanmps &gt; /home/save-lanmps.tar</span><br></pre></td></tr></table></figure><h4 id="加载"><a href="#加载" class="headerlink" title="加载"></a>加载</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker load &lt; /home/save-lanmps.tar</span><br></pre></td></tr></table></figure><h3 id="访问项目站点"><a href="#访问项目站点" class="headerlink" title="访问项目站点"></a>访问项目站点</h3><p>因为lanmps 设置的端口为80，那么就可以直接 在浏览器上 输入 127.0.0.1，<br>就可以看到 你的项目站点了</p><h3 id="nginx-docker内配置文件位置"><a href="#nginx-docker内配置文件位置" class="headerlink" title="nginx docker内配置文件位置"></a>nginx docker内配置文件位置</h3><p>配置文件位置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><h3 id="php-docker内配置文件位置"><a href="#php-docker内配置文件位置" class="headerlink" title="php docker内配置文件位置"></a>php docker内配置文件位置</h3><p>配置文件及目录位置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/etc/php-fpm.conf</span><br><span class="line">/usr/<span class="built_in">local</span>/etc/php-fpm.d/www.conf</span><br><span class="line">/usr/<span class="built_in">local</span>/etc/php-fpm.d 目录</span><br></pre></td></tr></table></figure><h3 id="php-ini-默认加载目录位置"><a href="#php-ini-默认加载目录位置" class="headerlink" title="php.ini 默认加载目录位置"></a>php.ini 默认加载目录位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/etc/php/conf.d/ 目录</span><br></pre></td></tr></table></figure><h3 id="扩展目录位置"><a href="#扩展目录位置" class="headerlink" title="扩展目录位置"></a>扩展目录位置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/lib/php/extensions/</span><br></pre></td></tr></table></figure><p>More info: <a href="https://blog.csdn.net/fenglailea/article/details/50451555" target="_blank" rel="noopener">GO</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-docker-安装&quot;&gt;&lt;a href=&quot;#1-docker-安装&quot; class=&quot;headerlink&quot; title=&quot;1 docker 安装&quot;&gt;&lt;/a&gt;1 docker 安装&lt;/h3&gt;&lt;h4 id=&quot;ubuntu-14-x-15-x&quot;&gt;&lt;a href=&quot;#u
      
    
    </summary>
    
      <category term="后端" scheme="http://140.143.243.43/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://140.143.243.43/tags/linux/"/>
    
      <category term="docker" scheme="http://140.143.243.43/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Php指定时间戳/日期加一天，一年，一周，一月</title>
    <link href="http://140.143.243.43/2019/02/24/Php%E6%8C%87%E5%AE%9A%E6%97%B6%E9%97%B4%E6%88%B3-%E6%97%A5%E6%9C%9F%E5%8A%A0%E4%B8%80%E5%A4%A9%EF%BC%8C%E4%B8%80%E5%B9%B4%EF%BC%8C%E4%B8%80%E5%91%A8%EF%BC%8C%E4%B8%80%E6%9C%88/"/>
    <id>http://140.143.243.43/2019/02/24/Php指定时间戳-日期加一天，一年，一周，一月/</id>
    <published>2019-02-24T12:19:58.000Z</published>
    <updated>2019-02-24T12:21:31.849Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'now'</span>));//当前时间戳 2017-01-09 21:04:11</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'+1second'</span>));//当前时间戳+1秒 2017-01-09 21:04:12</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'+1minute'</span>));//当前时间戳+1分 2017-01-09 21:05:11</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'+1hour'</span>));//当前时间戳+1小时 2017-01-09 22:04:11</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'+1day'</span>));//当前时间戳+1天 2017-01-10 21:04:11</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'+1week'</span>));//当前时间戳+1周 2017-01-16 21:04:11</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'+1month'</span>));//当前时间戳+1月 2017-02-09 21:04:11</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'+1year'</span>));//当前时间戳+1年 2018-01-09 21:04:11</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">'+12year 12month 12day 12hour 12minute 12second'</span>));//当前时间戳+12年，12月，12天，12小时，12分，12秒 2030-01-22 09:16:23</span><br><span class="line"><span class="variable">$t</span>=1483967416;//指定时间戳</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$dt</span>=date(<span class="string">'Y-m-d H:i:s'</span>,<span class="variable">$t</span>);//2017-01-09 21:10:16</span><br><span class="line">/*方法一*/</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,<span class="variable">$t</span>+1*24*60*60);//指定时间戳+1天 2017-01-10 21:10:16</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,<span class="variable">$t</span>+365*24*60*60);//指定时间戳+1年 2018-01-09 21:10:16</span><br><span class="line">/*方法二*/</span><br><span class="line">//<span class="variable">$dt</span>是指定时间戳格式化后的日期</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">"<span class="variable">$dt</span>+1day"</span>));//指定时间戳+1天 2017-01-10 21:10:16</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">"<span class="variable">$dt</span>+1year"</span>));//指定时间戳+1年 2018-01-09 21:10:16</span><br><span class="line">/*方法三*/</span><br><span class="line">//<span class="variable">$t</span>是指定时间戳</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">"+1day"</span>,<span class="variable">$t</span>));//指定时间戳+1天 2017-01-10 21:10:16</span><br><span class="line"><span class="built_in">echo</span> date(<span class="string">'Y-m-d H:i:s'</span>,strtotime(<span class="string">"+1year"</span>,<span class="variable">$t</span>));//指定时间戳+1年 2018-01-09 21:10:16</span><br><span class="line">//指定时间戳加1月、1周、1小时、1分、1秒原理同上；</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="后端" scheme="http://140.143.243.43/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="php" scheme="http://140.143.243.43/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Ueditor相关问题</title>
    <link href="http://140.143.243.43/2019/02/21/Ueditor%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <id>http://140.143.243.43/2019/02/21/Ueditor相关问题/</id>
    <published>2019-02-21T10:01:21.000Z</published>
    <updated>2019-02-21T10:05:30.375Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Ueditor上传图片问题"><a href="#Ueditor上传图片问题" class="headerlink" title="Ueditor上传图片问题"></a>Ueditor上传图片问题</h3><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><p>上传的图片已经上传于服务器，但是提示上传失败</p><h4 id="问题排除"><a href="#问题排除" class="headerlink" title="问题排除"></a>问题排除</h4><p>浏览器F12开发者模式查看发现/php/controller.php?action=uploadimage报502错误        逐步断点排查发现如果注释掉iconv(‘unicode’, ‘utf-8’, $this-&gt;stateMap[‘ERROR_TYPE_NOT_ALLOWED’])代码之后问题消失。</p><h4 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h4><p>可能是iconv函数运行时抛出错误导致</p><h4 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h4><p>ueditor的github上面已经更新了代码，但是最新版的ueditor的源码中的代码还没有更新。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">将</span><br><span class="line">iconv(<span class="string">'unicode'</span>,<span class="string">'utf-8'</span>,<span class="variable">$this</span>-&gt;stateMap[<span class="string">'ERROR_TYPE_NOT_ALLOWED'</span>]);</span><br><span class="line">替换为</span><br><span class="line">mb_convert_encoding(<span class="variable">$this</span>-&gt;stateMap[<span class="string">'ERROR_TYPE_NOT_ALLOWED'</span>],<span class="string">'utf-8'</span>,<span class="string">'auto'</span>);</span><br></pre></td></tr></table></figure><h3 id="Ueditor视频问题"><a href="#Ueditor视频问题" class="headerlink" title="Ueditor视频问题"></a>Ueditor视频问题</h3><h4 id="问题描述-1"><a href="#问题描述-1" class="headerlink" title="问题描述"></a>问题描述</h4><p>上传视频不能播放</p><h4 id="问题排除-1"><a href="#问题排除-1" class="headerlink" title="问题排除"></a>问题排除</h4><p>前端页面video标签的src属性为空，我就去后台重新上传了一次视频，前端刷新后，视频可以看了。但是后台修改或者调整视频位置的时候，src就消失了。</p><h4 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h4><p>Ueditro.config.js<br>line366，whitList改为whiteList</p><p>ueditor.all.js<br>把preload改为’meta’</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Ueditor上传图片问题&quot;&gt;&lt;a href=&quot;#Ueditor上传图片问题&quot; class=&quot;headerlink&quot; title=&quot;Ueditor上传图片问题&quot;&gt;&lt;/a&gt;Ueditor上传图片问题&lt;/h3&gt;&lt;h4 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot;
      
    
    </summary>
    
      <category term="后端" scheme="http://140.143.243.43/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="php" scheme="http://140.143.243.43/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript正则表达式限制输入框</title>
    <link href="http://140.143.243.43/2019/02/21/JavaScript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%99%90%E5%88%B6%E8%BE%93%E5%85%A5%E6%A1%86/"/>
    <id>http://140.143.243.43/2019/02/21/JavaScript正则表达式限制输入框/</id>
    <published>2019-02-21T09:40:08.000Z</published>
    <updated>2019-02-21T09:48:43.106Z</updated>
    
    <content type="html"><![CDATA[<h3 id="输入框只能输入数字"><a href="#输入框只能输入数字" class="headerlink" title="输入框只能输入数字"></a>输入框只能输入数字</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="built_in">type</span>=<span class="string">"text"</span> onkeyup=<span class="string">"this.value=this.value.replace(/[^\d]/g,'') "</span> onafterpaste=<span class="string">"this.value=this.value.replace(/[^\d]/g,'') "</span> name=<span class="string">"f_order"</span> value=<span class="string">"1"</span>/&gt;</span><br><span class="line"><span class="comment">#其中，onafterpaste防止用户从其它地方copy内容粘贴到输入框</span></span><br></pre></td></tr></table></figure><h3 id="输入框只能输入字母和下横线"><a href="#输入框只能输入字母和下横线" class="headerlink" title="输入框只能输入字母和下横线"></a>输入框只能输入字母和下横线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onkeyup=<span class="string">"this.value=this.value.replace(/[^_a-zA-Z]/g,'')"</span> onpaste=<span class="string">"this.value=this.value.replace(/[^_a-zA-Z]/g,'')"</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="输入框只能输入字母数字和下横线"><a href="#输入框只能输入字母数字和下横线" class="headerlink" title="输入框只能输入字母数字和下横线"></a>输入框只能输入字母数字和下横线</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onkeyup=<span class="string">"this.value=this.value.replace(/[^\w]/g,'')"</span> onpaste=<span class="string">"this.value=this.value.replace(/[^\w]/g,'')"</span>&gt;</span><br><span class="line">或</span><br><span class="line">&lt;input onkeyup=<span class="string">"this.value=this.value.replace(/[\W]/g,'')"</span> onpaste=<span class="string">"this.value=this.value.replace(/[\W]/g,'')"</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="输入框只能输入数字和英文"><a href="#输入框只能输入数字和英文" class="headerlink" title="输入框只能输入数字和英文"></a>输入框只能输入数字和英文</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;input onkeyup=<span class="string">"value=value.replace(/[\W]/g,'') "</span>onbeforepaste=<span class="string">"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\d]/g,''))"</span>&gt; </span><br><span class="line">只能输入数字的： </span><br><span class="line">&lt;input onkeyup=<span class="string">"value=value.replace(/[^\d]/g,'') "</span>onbeforepaste=<span class="string">"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\d]/g,''))"</span>&gt; </span><br><span class="line">只能输入全角的： </span><br><span class="line">&lt;input onkeyup=<span class="string">"value=value.replace(/[^\uFF00-\uFFFF]/g,'')"</span> onbeforepaste=<span class="string">"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\uFF00-\uFFFF]/g,''))"</span>&gt; </span><br><span class="line">只能输入汉字的： </span><br><span class="line">&lt;input onkeyup=<span class="string">"value=value.replace(/[^\u4E00-\u9FA5]/g,'')"</span> onbeforepaste=<span class="string">"clipboardData.setData('text',clipboardData.getData('text').replace(/[^\u4E00-\u9FA5]/g,''))"</span>&gt; </span><br><span class="line">也可以这样： 输入数字和.，否则弹出输入有误 </span><br><span class="line">&lt;input <span class="built_in">type</span>=text name= caolig value =<span class="string">""</span> onblur=<span class="string">"if (!(/^[\d]+\.?\d*$/.test(this.value)) )&#123;alert('您的输入有误'); this.value='';this.focus();&#125;"</span>&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;输入框只能输入数字&quot;&gt;&lt;a href=&quot;#输入框只能输入数字&quot; class=&quot;headerlink&quot; title=&quot;输入框只能输入数字&quot;&gt;&lt;/a&gt;输入框只能输入数字&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td
      
    
    </summary>
    
      <category term="前端" scheme="http://140.143.243.43/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javascript" scheme="http://140.143.243.43/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务器中mysql数据库数据恢复</title>
    <link href="http://140.143.243.43/2019/02/19/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%ADmysql%E6%95%B0%E6%8D%AE%E5%BA%93%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/"/>
    <id>http://140.143.243.43/2019/02/19/Linux服务器中mysql数据库数据恢复/</id>
    <published>2019-02-18T17:49:04.000Z</published>
    <updated>2019-02-18T18:05:41.061Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备恢复数据文件"><a href="#准备恢复数据文件" class="headerlink" title="准备恢复数据文件"></a>准备恢复数据文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p                          //进入数据库</span><br><span class="line">use dckj;                                   //进入数据表</span><br><span class="line">show tables;                                //查看此时数据库情况</span><br><span class="line">show binary logs;                          //查看二进制日志</span><br><span class="line">show binlog events <span class="keyword">in</span> <span class="string">'mysql-bin.000015'</span>;    //查看mysql-bin.000015具体内容</span><br><span class="line"></span><br><span class="line">/usr/<span class="built_in">local</span>/mysql/var/mysql-bin.000015        //服务器中日志存放路径</span><br></pre></td></tr></table></figure><h3 id="恢复数据"><a href="#恢复数据" class="headerlink" title="恢复数据"></a>恢复数据</h3><p>服务器中输入（start-position指日志中语句开始的行数）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/mysql/bin/mysqlbinlog --start-position=<span class="string">'4311393'</span> --stop-position=<span class="string">'4250819'</span> /usr/<span class="built_in">local</span>/mysql/var/mysql-bin.000015 | mysql -u root -p</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备恢复数据文件&quot;&gt;&lt;a href=&quot;#准备恢复数据文件&quot; class=&quot;headerlink&quot; title=&quot;准备恢复数据文件&quot;&gt;&lt;/a&gt;准备恢复数据文件&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="后端" scheme="http://140.143.243.43/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="linux" scheme="http://140.143.243.43/tags/linux/"/>
    
      <category term="mysql" scheme="http://140.143.243.43/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Workerman安装使用</title>
    <link href="http://140.143.243.43/2019/02/17/Workerman%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://140.143.243.43/2019/02/17/Workerman安装使用/</id>
    <published>2019-02-16T18:07:37.000Z</published>
    <updated>2019-02-16T18:42:46.477Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h3><p>WorkerMan实际上就是一个PHP代码包，如果你的PHP环境已经装好，只需要把WorkerMan源代码或者demo下载下来即可运行。</p><h3 id="windows用户（必读）"><a href="#windows用户（必读）" class="headerlink" title="windows用户（必读）"></a>windows用户（必读）</h3><p>windows用户需要使用windows版本的workerman，windows版本workerman本身不依赖任何扩展，只需要配置好PHP环境变量即可，windows版本workerman安装及注意事项参见<a href="https://www.workerman.net/windows" target="_blank" rel="noopener">windows用户必看</a>。</p><h3 id="Linux系统环境检测"><a href="#Linux系统环境检测" class="headerlink" title="Linux系统环境检测"></a>Linux系统环境检测</h3><p>Linux系统可以使用以下脚本测试本机PHP环境是否满足WorkerMan运行要求。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -Ss http://www.workerman.net/check.php | php</span><br></pre></td></tr></table></figure><p>上面脚本如果全部显示ok，则代表满足WorkerMan要求，直接到官网下载例子即可运行。<br>如果不是全部ok，则参考下面文档安装缺失的扩展即可。<br>若出现Function stream_socket_server may be disabled. Please check disable_functions in php.ini<br>see <a href="http://doc3.workerman.net/faq/disable-function-check.html" target="_blank" rel="noopener">http://doc3.workerman.net/faq/disable-function-check.html</a><br>这里以lnmp集成安装包为例修改php.ini</p><p>修改PHP配置文件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/php/etc/php.ini</span><br><span class="line"><span class="comment">#去除disable_functions 后面的 stream_socket_server</span></span><br></pre></td></tr></table></figure><p>（注意：检测脚本中没有检测event扩展或者libevent扩展，如果业务并发连接数大于1024建议安装event扩展或者libevent扩展，安装方法参照下面说明）</p><h3 id="已有PHP环境安装缺失扩展"><a href="#已有PHP环境安装缺失扩展" class="headerlink" title="已有PHP环境安装缺失扩展"></a>已有PHP环境安装缺失扩展</h3><p>1.<strong>安装pcntl和posix扩展：</strong></p><p><strong>centos系统</strong><br>如果php是通过yum安装的，则命令行运行 yum install php-process即可安装pcntl和posix扩展。</p><p>2.<strong>安装event或者libevent扩展：</strong></p><p>为了能支持更大的并发连接数，建议安装event扩展或者libevent扩展(二者作用相同，二选一即可)。以Event为例，安装方法如下:</p><p><strong>centos系统</strong></p><p>a.安装event扩展依赖的libevent-devel包，命令行运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install libevent-devel -y</span><br></pre></td></tr></table></figure><p>b.安装event扩展，命令行运行<br>(event扩展要求PHP&gt;=5.4，PHP5.3用户请安装libevent扩展(libevent扩展同时支持php5.4-5.6)，见本页面底部)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pecl install event</span><br></pre></td></tr></table></figure><p>注意提示：Include libevent OpenSSL support [yes] : 时输入no回车，其它直接敲回车就行<br>如果安装失败请跳过以下步骤，尝试安装libevent扩展，见本页面底部。</p><p>c.命令行运行（如果ini文件位置不对，可以通过运行php –ini找到实际加载的ini文件路径）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> extension=event.so &gt; /etc/php.d/30-event.ini 这里若是lnmp集成安装包写/usr/<span class="built_in">local</span>/php/etc/php.ini</span><br></pre></td></tr></table></figure><p>More info: <a href="http://doc.workerman.net/315116" target="_blank" rel="noopener">GO</a></p><h3 id="GatewayWorker安装"><a href="#GatewayWorker安装" class="headerlink" title="GatewayWorker安装"></a>GatewayWorker安装</h3><p><strong>Linux版安装</strong></p><p>a、进入thinkphp5的目录，例cd /home/wwwroot/house.nbdeli.net/house，使用composer require workerman/gateway-worker 安装Linux版本的gateway<br>b、去官网下载Linux版的gateway-worker，里面有demo。 <a href="http://www.workerman.net/download" target="_blank" rel="noopener">http://www.workerman.net/download</a><br>c、将下载的压缩包解压，将Applications/Yourapp中的文件全部复制到thinkphp5目录application里面的任意文件夹，这里取名为push<br>d、将解压后的文件夹中的start.php复制到thinkphp5的根目录，即与application同级的目录<br>e、将start.php文件中最后部分forearch循环括号内的路径改为自己的正确路径<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__DIR__.<span class="string">'/application/push/start*.php'</span></span><br></pre></td></tr></table></figure></p><p>f、在命令行php start.php start 启动</p><p>以debug（调试）方式启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php start.php start</span><br></pre></td></tr></table></figure></p><p>以daemon（守护进程）方式启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php start.php start -d</span><br></pre></td></tr></table></figure></p><p>停止<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php start.php stop</span><br></pre></td></tr></table></figure></p><p>重启<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php start.php restart</span><br></pre></td></tr></table></figure></p><p>平滑重启<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php start.php reload</span><br></pre></td></tr></table></figure></p><p>查看状态<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php start.php status</span><br></pre></td></tr></table></figure></p><p>查看连接状态（需要Workerman版本&gt;=3.5.0<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php start.php connections</span><br></pre></td></tr></table></figure></p><p>More info: <a href="https://www.cnblogs.com/wt645631686/p/7219519.html" target="_blank" rel="noopener">GO</a></p><h3 id="Workerman-MySQL"><a href="#Workerman-MySQL" class="headerlink" title="Workerman/MySQL"></a>Workerman/MySQL</h3><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>常驻内存的程序在使用mysql时经常会遇到mysql gone away的错误，这个是由于程序与mysql的连接长时间没有通讯，连接被mysql服务端踢掉导致。本数据库类可以解决这个问题，当发生mysql gone away错误时，会自动重试一次。</p><h4 id="依赖的扩展"><a href="#依赖的扩展" class="headerlink" title="依赖的扩展"></a>依赖的扩展</h4><p>该mysql类依赖pdo和pdo_mysql两个扩展，缺少扩展会报Undefined class constant ‘MYSQL_ATTR_INIT_COMMAND’ in ….错误。<br>命令行运行php -m会列出所有php cli已安装的扩展，如果没有pdo 或者 pdo_mysql，请自行安装。</p><p><strong>centos系统</strong><br>PHP5.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install php-pdo</span><br><span class="line">yum install php-mysql</span><br></pre></td></tr></table></figure><p>PHP7.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install php70w-pdo_dblib.x86_64</span><br><span class="line">yum install php70w-mysqlnd.x86_64</span><br></pre></td></tr></table></figure><p>如果找不到包名，请尝试用yum search php mysql查找</p><p>1、<strong>安装 Workerman/MySQL</strong><br><strong>方法1：</strong><br>可以通过composer安装，命令行运行以下命令(composer源在国外，安装过程可能会非常慢)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer require workerman/mysql</span><br></pre></td></tr></table></figure></p><p>上面命令成功后会生成vendor目录，然后在项目中引入vendor下的autoload.php。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require_once __DIR__ . <span class="string">'/vendor/autoload.php'</span>;</span><br></pre></td></tr></table></figure></p><p><strong>方法2：</strong><br><a href="https://github.com/walkor/mysql/archive/master.zip" target="_blank" rel="noopener">下载源码</a>，解压后的目录放到自己项目中(位置任意)，直接require源文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require_once <span class="string">'/your/path/of/mysql-master/src/Connection.php'</span>;</span><br></pre></td></tr></table></figure></p><p><strong>注意</strong><br>强烈建议在onWorkerStart回调中初始化数据库连接，避免在Worker::runAll();运行前就初始化连接，在Worker::runAll();运行前初始化的连接属于主进程，子进程会继承这个连接，主进程和子进程共用相同的数据库连接会导致错误。<br>示例<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">use Workerman\Worker;</span><br><span class="line">require_once __DIR__ . <span class="string">'/Workerman/Autoloader.php'</span>;</span><br><span class="line">require_once __DIR__ . <span class="string">'/vendor/autoload.php'</span>;</span><br><span class="line"><span class="variable">$worker</span> = new Worker(<span class="string">'websocket://0.0.0.0:8484'</span>);</span><br><span class="line"><span class="variable">$worker</span>-&gt;onWorkerStart = <span class="keyword">function</span>(<span class="variable">$worker</span>)</span><br><span class="line">&#123;</span><br><span class="line">    // 将db实例存储在全局变量中(也可以存储在某类的静态成员中)</span><br><span class="line">    global <span class="variable">$db</span>;</span><br><span class="line">    <span class="variable">$db</span> = new \Workerman\MySQL\Connection(<span class="string">'host'</span>, <span class="string">'port'</span>, <span class="string">'user'</span>, <span class="string">'password'</span>, <span class="string">'db_name'</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="variable">$worker</span>-&gt;onMessage = <span class="keyword">function</span>(<span class="variable">$connection</span>, <span class="variable">$data</span>)</span><br><span class="line">&#123;</span><br><span class="line">    // 通过全局变量获得db实例</span><br><span class="line">    global <span class="variable">$db</span>;</span><br><span class="line">    // 执行SQL</span><br><span class="line">    <span class="variable">$all_tables</span> = <span class="variable">$db</span>-&gt;query(<span class="string">'show tables'</span>);</span><br><span class="line">    <span class="variable">$connection</span>-&gt;send(json_encode(<span class="variable">$all_tables</span>));</span><br><span class="line">&#125;;</span><br><span class="line">// 运行worker</span><br><span class="line">Worker::runAll();</span><br><span class="line">具体MySQL/Connection用法</span><br><span class="line">// 初始化db连接</span><br><span class="line"><span class="variable">$db</span> = new \Workerman\MySQL\Connection(<span class="string">'host'</span>, <span class="string">'port'</span>, <span class="string">'user'</span>, <span class="string">'password'</span>, <span class="string">'db_name'</span>);</span><br><span class="line">// 获取所有数据</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'ID,Sex'</span>)-&gt;from(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">'sex= :sex AND ID = :id'</span>)-&gt;bindValues(array(<span class="string">'sex'</span>=&gt;<span class="string">'M'</span>, <span class="string">'id'</span> =&gt; 1))-&gt;query();</span><br><span class="line">//等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'ID,Sex'</span>)-&gt;from(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">"sex= 'M' AND ID = 1"</span>)-&gt;query();</span><br><span class="line">//等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;query(<span class="string">"SELECT ID,Sex FROM `Persons` WHERE sex='M' AND ID = 1"</span>);</span><br><span class="line">// 获取一行数据</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'ID,Sex'</span>)-&gt;from(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">'sex= :sex'</span>)-&gt;bindValues(array(<span class="string">'sex'</span>=&gt;<span class="string">'M'</span>))-&gt;row();</span><br><span class="line">//等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'ID,Sex'</span>)-&gt;from(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">"sex= 'M' "</span>)-&gt;row();</span><br><span class="line">//等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;row(<span class="string">"SELECT ID,Sex FROM `Persons` WHERE sex='M'"</span>);</span><br><span class="line">// 获取一列数据</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'ID'</span>)-&gt;from(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">'sex= :sex'</span>)-&gt;bindValues(array(<span class="string">'sex'</span>=&gt;<span class="string">'M'</span>))-&gt;column();</span><br><span class="line">//等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'ID'</span>)-&gt;from(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">"sex= 'F' "</span>)-&gt;column();</span><br><span class="line">//等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;column(<span class="string">"SELECT `ID` FROM `Persons` WHERE sex='M'"</span>);</span><br><span class="line">// 获取单个值</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'ID'</span>)-&gt;from(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">'sex= :sex'</span>)-&gt;bindValues(array(<span class="string">'sex'</span>=&gt;<span class="string">'M'</span>))-&gt;single();</span><br><span class="line">//等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'ID'</span>)-&gt;from(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">"sex= 'F' "</span>)-&gt;single();</span><br><span class="line">//等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;single(<span class="string">"SELECT ID FROM `Persons` WHERE sex='M'"</span>);</span><br><span class="line">// 复杂查询</span><br><span class="line"><span class="variable">$db</span>-&gt;select(<span class="string">'*'</span>)-&gt;from(<span class="string">'table1'</span>)-&gt;innerJoin(<span class="string">'table2'</span>,<span class="string">'table1.uid = table2.uid'</span>)-&gt;<span class="built_in">where</span>(<span class="string">'age &gt; :age'</span>)-&gt;groupBy(array(<span class="string">'aid'</span>))-&gt;having(<span class="string">'foo="foo"'</span>)-&gt;orderByASC/*orderByDESC*/(array(<span class="string">'did'</span>))</span><br><span class="line">-&gt;<span class="built_in">limit</span>(10)-&gt;offset(20)-&gt;bindValues(array(<span class="string">'age'</span> =&gt; 13));</span><br><span class="line">// 等价于</span><br><span class="line"><span class="variable">$db</span>-&gt;query(<span class="string">'SELECT * FROM `table1` INNER JOIN `table2` ON `table1`.`uid` = `table2`.`uid`</span></span><br><span class="line"><span class="string">WHERE age &gt; 13 GROUP BY aid HAVING foo="foo" ORDER BY did LIMIT 10 OFFSET 20'</span>);</span><br><span class="line">// 插入</span><br><span class="line"><span class="variable">$insert_id</span> = <span class="variable">$db</span>-&gt;insert(<span class="string">'Persons'</span>)-&gt;cols(array(</span><br><span class="line">    <span class="string">'Firstname'</span>=&gt;<span class="string">'abc'</span>,</span><br><span class="line">    <span class="string">'Lastname'</span>=&gt;<span class="string">'efg'</span>,</span><br><span class="line">    <span class="string">'Sex'</span>=&gt;<span class="string">'M'</span>,</span><br><span class="line">    <span class="string">'Age'</span>=&gt;13))-&gt;query();</span><br><span class="line">等价于</span><br><span class="line"><span class="variable">$insert_id</span> = <span class="variable">$db</span>-&gt;query(<span class="string">"INSERT INTO `Persons` ( `Firstname`,`Lastname`,`Sex`,`Age`)</span></span><br><span class="line"><span class="string">VALUES ( 'abc', 'efg', 'M', 13)"</span>);</span><br><span class="line">// 更新</span><br><span class="line"><span class="variable">$row_count</span> = <span class="variable">$db</span>-&gt;update(<span class="string">'Persons'</span>)-&gt;cols(array(<span class="string">'sex'</span>))-&gt;<span class="built_in">where</span>(<span class="string">'ID=1'</span>)</span><br><span class="line">-&gt;bindValue(<span class="string">'sex'</span>, <span class="string">'F'</span>)-&gt;query();</span><br><span class="line">// 等价于</span><br><span class="line"><span class="variable">$row_count</span> = <span class="variable">$db</span>-&gt;update(<span class="string">'Persons'</span>)-&gt;cols(array(<span class="string">'sex'</span>=&gt;<span class="string">'F'</span>))-&gt;<span class="built_in">where</span>(<span class="string">'ID=1'</span>)-&gt;query();</span><br><span class="line">// 等价于</span><br><span class="line"><span class="variable">$row_count</span> = <span class="variable">$db</span>-&gt;query(<span class="string">"UPDATE `Persons` SET `sex` = 'F' WHERE ID=1"</span>);</span><br><span class="line">// 删除</span><br><span class="line"><span class="variable">$row_count</span> = <span class="variable">$db</span>-&gt;delete(<span class="string">'Persons'</span>)-&gt;<span class="built_in">where</span>(<span class="string">'ID=9'</span>)-&gt;query();</span><br><span class="line">// 等价于</span><br><span class="line"><span class="variable">$row_count</span> = <span class="variable">$db</span>-&gt;query(<span class="string">"DELETE FROM `Persons` WHERE ID=9"</span>);</span><br><span class="line">// 事务</span><br><span class="line"><span class="variable">$db</span>-&gt;beginTrans();</span><br><span class="line">....</span><br><span class="line"><span class="variable">$db</span>-&gt;commitTrans(); // or <span class="variable">$db</span>-&gt;rollBackTrans();</span><br></pre></td></tr></table></figure></p><p>More info: <a href="http://doc.workerman.net/components/workerman-mysql.html" target="_blank" rel="noopener">GO</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装说明&quot;&gt;&lt;a href=&quot;#安装说明&quot; class=&quot;headerlink&quot; title=&quot;安装说明&quot;&gt;&lt;/a&gt;安装说明&lt;/h3&gt;&lt;p&gt;WorkerMan实际上就是一个PHP代码包，如果你的PHP环境已经装好，只需要把WorkerMan源代码或者demo下载下
      
    
    </summary>
    
      <category term="后端" scheme="http://140.143.243.43/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="workerman" scheme="http://140.143.243.43/tags/workerman/"/>
    
  </entry>
  
  <entry>
    <title>Redis安装使用</title>
    <link href="http://140.143.243.43/2019/02/17/Redis%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://140.143.243.43/2019/02/17/Redis安装使用/</id>
    <published>2019-02-16T17:25:52.000Z</published>
    <updated>2019-02-24T15:27:51.189Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Linux-下安装"><a href="#Linux-下安装" class="headerlink" title="Linux 下安装"></a>Linux 下安装</h3><p>下载地址：<a href="http://redis.io/download" target="_blank" rel="noopener">http://redis.io/download</a> ,下载最新文档版本。<br>本教程使用的最新文档版本为 4.0.1，下载并安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.redis.io/releases/redis-4.0.1.tar.gz</span><br><span class="line">tar xzf redis-4.0.1.tar.gz</span><br><span class="line"><span class="built_in">cd</span> redis-4.0.1</span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>make完后 redis-4.0.1目录下会出现编译后的redis服务程序redis-server,还有用于测试的客户端程序redis-cli,两个程序位于安装目录 src 目录下：<br>下面启动redis服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">./redis-server</span><br><span class="line"><span class="comment">#注意这种方式启动redis 使用的是默认配置。也可以通过启动参数告诉redis使用指定配置文件使用下面命令启动。</span></span><br><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">./redis-server redis.conf</span><br><span class="line"><span class="comment">#redis.conf是一个默认的配置文件。我们可以根据需要使用自己的配置文件。</span></span><br></pre></td></tr></table></figure><p>启动redis服务进程后，就可以使用测试客户端程序redis-cli和redis服务交互了。 比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> src</span><br><span class="line">./redis-cli</span><br><span class="line">redis&gt; <span class="built_in">set</span> foo bar</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line"><span class="string">"bar"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="http://www.runoob.com/redis/redis-install.html" target="_blank" rel="noopener">GO</a></p><h3 id="PHP-使用-Redis"><a href="#PHP-使用-Redis" class="headerlink" title="PHP 使用 Redis"></a>PHP 使用 Redis</h3><p>PHP安装redis扩展</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/phpredis/phpredis/archive/2.2.4.tar.gz</span><br><span class="line"><span class="built_in">cd</span> phpredis-2.2.7                      <span class="comment"># 进入 phpredis 目录</span></span><br><span class="line">/usr/<span class="built_in">local</span>/php/bin/phpize              <span class="comment"># php安装后的路径</span></span><br><span class="line">./configure --with-php-config=/usr/<span class="built_in">local</span>/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment">#如果你是 PHP7 版本，则需要下载指定分支：</span></span><br><span class="line">git <span class="built_in">clone</span> -b php7 https://github.com/phpredis/phpredis.git</span><br></pre></td></tr></table></figure><p>修改php.ini文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/php/lib/php.ini</span><br><span class="line"><span class="comment">#增加如下内容:</span></span><br><span class="line">extension_dir = <span class="string">"/usr/local/php/lib/php/extensions/no-debug-zts-20090626"</span>（默认可以不加）</span><br><span class="line">extension=redis.so（必加）</span><br></pre></td></tr></table></figure><p>安装完成后重启php-fpm 或 apache。查看phpinfo信息，就能看到redis扩展。<br><img src="/images/phpinfo.jpg" alt="phpinfo"></p><p>连接到 redis 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    //连接本地的 Redis 服务</span><br><span class="line">   <span class="variable">$redis</span> = new Redis();</span><br><span class="line">   <span class="variable">$redis</span>-&gt;connect(<span class="string">'127.0.0.1'</span>, 6379);</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Connection to server sucessfully"</span>;</span><br><span class="line">         //查看服务是否运行</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Server is running: "</span> . <span class="variable">$redis</span>-&gt;ping();</span><br><span class="line">?&gt;</span><br><span class="line"><span class="comment">#执行脚本，输出结果为：</span></span><br><span class="line">Connection to server sucessfully</span><br><span class="line">Server is running: PONG</span><br></pre></td></tr></table></figure><p>Redis PHP String(字符串) 实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   //连接本地的 Redis 服务</span><br><span class="line">   <span class="variable">$redis</span> = new Redis();</span><br><span class="line">   <span class="variable">$redis</span>-&gt;connect(<span class="string">'127.0.0.1'</span>, 6379);</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Connection to server sucessfully"</span>;</span><br><span class="line">   //设置 redis 字符串数据</span><br><span class="line">   <span class="variable">$redis</span>-&gt;<span class="built_in">set</span>(<span class="string">"tutorial-name"</span>, <span class="string">"Redis tutorial"</span>);</span><br><span class="line">   // 获取存储的数据并输出</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Stored string in redis:: "</span> . <span class="variable">$redis</span>-&gt;get(<span class="string">"tutorial-name"</span>);</span><br><span class="line">?&gt;</span><br><span class="line"><span class="comment">#执行脚本，输出结果为：</span></span><br><span class="line">Connection to server sucessfully</span><br><span class="line">Stored string <span class="keyword">in</span> redis:: Redis tutorial</span><br></pre></td></tr></table></figure><p>Redis PHP List(列表) 实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   //连接本地的 Redis 服务</span><br><span class="line">   <span class="variable">$redis</span> = new Redis();</span><br><span class="line">   <span class="variable">$redis</span>-&gt;connect(<span class="string">'127.0.0.1'</span>, 6379);</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Connection to server sucessfully"</span>;</span><br><span class="line">   //存储数据到列表中</span><br><span class="line">   <span class="variable">$redis</span>-&gt;lpush(<span class="string">"tutorial-list"</span>, <span class="string">"Redis"</span>);</span><br><span class="line">   <span class="variable">$redis</span>-&gt;lpush(<span class="string">"tutorial-list"</span>, <span class="string">"Mongodb"</span>);</span><br><span class="line">   <span class="variable">$redis</span>-&gt;lpush(<span class="string">"tutorial-list"</span>, <span class="string">"Mysql"</span>);</span><br><span class="line">   // 获取存储的数据并输出</span><br><span class="line">   <span class="variable">$arList</span> = <span class="variable">$redis</span>-&gt;lrange(<span class="string">"tutorial-list"</span>, 0 ,5);</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Stored string in redis"</span>;</span><br><span class="line">   print_r(<span class="variable">$arList</span>);</span><br><span class="line">?&gt;</span><br><span class="line"><span class="comment">#执行脚本，输出结果为：</span></span><br><span class="line">Connection to server sucessfully</span><br><span class="line">Stored string <span class="keyword">in</span> redis</span><br><span class="line">Mysql</span><br><span class="line">Mongodb</span><br><span class="line">Redis</span><br></pre></td></tr></table></figure><p>Redis PHP Keys 实例</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">   //连接本地的 Redis 服务</span><br><span class="line">   <span class="variable">$redis</span> = new Redis();</span><br><span class="line">   <span class="variable">$redis</span>-&gt;connect(<span class="string">'127.0.0.1'</span>, 6379);</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Connection to server sucessfully"</span>;</span><br><span class="line">   // 获取数据并输出</span><br><span class="line">   <span class="variable">$arList</span> = <span class="variable">$redis</span>-&gt;keys(<span class="string">"*"</span>);</span><br><span class="line">   <span class="built_in">echo</span> <span class="string">"Stored keys in redis:: "</span>;</span><br><span class="line">   print_r(<span class="variable">$arList</span>);</span><br><span class="line">?&gt;</span><br><span class="line"><span class="comment">#执行脚本，输出结果为：</span></span><br><span class="line">Connection to server sucessfully</span><br><span class="line">Stored string <span class="keyword">in</span> redis::</span><br><span class="line">tutorial-name</span><br><span class="line">tutorial-list</span><br></pre></td></tr></table></figure><p>More info: <a href="http://www.runoob.com/redis/redis-php.html" target="_blank" rel="noopener">GO</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Linux-下安装&quot;&gt;&lt;a href=&quot;#Linux-下安装&quot; class=&quot;headerlink&quot; title=&quot;Linux 下安装&quot;&gt;&lt;/a&gt;Linux 下安装&lt;/h3&gt;&lt;p&gt;下载地址：&lt;a href=&quot;http://redis.io/download&quot; ta
      
    
    </summary>
    
      <category term="后端" scheme="http://140.143.243.43/categories/%E5%90%8E%E7%AB%AF/"/>
    
    
      <category term="redis" scheme="http://140.143.243.43/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Linux上iptables防火墙的配置</title>
    <link href="http://140.143.243.43/2019/02/17/Linux%E4%B8%8Aiptables%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <id>http://140.143.243.43/2019/02/17/Linux上iptables防火墙的配置/</id>
    <published>2019-02-16T16:49:15.000Z</published>
    <updated>2019-02-16T17:21:14.334Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装iptables防火墙"><a href="#安装iptables防火墙" class="headerlink" title="安装iptables防火墙"></a>安装iptables防火墙</h3><p>如果没有安装iptables需要先安装，CentOS执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables</span><br></pre></td></tr></table></figure><p>Debian/Ubuntu执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install iptables</span><br></pre></td></tr></table></figure><h3 id="清除已有iptables规则"><a href="#清除已有iptables规则" class="headerlink" title="清除已有iptables规则"></a>清除已有iptables规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -F</span><br><span class="line">iptables -X</span><br><span class="line">iptables -Z</span><br></pre></td></tr></table></figure><h3 id="开放指定的端口"><a href="#开放指定的端口" class="headerlink" title="开放指定的端口"></a>开放指定的端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">-A和-I参数分别为添加到规则末尾和规则最前面。</span><br><span class="line"><span class="comment">#允许本地回环接口(即运行本机访问本机)</span></span><br><span class="line">iptables -A INPUT -i lo -j ACCEPT</span><br><span class="line"><span class="comment"># 允许已建立的或相关连的通行</span></span><br><span class="line">iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line"><span class="comment">#允许所有本机向外的访问</span></span><br><span class="line">iptables -A OUTPUT -j ACCEPT</span><br><span class="line"><span class="comment"># 允许访问22端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line"><span class="comment">#允许访问80端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line"><span class="comment">#允许访问443端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 443 -j ACCEPT</span><br><span class="line"><span class="comment">#允许FTP服务的21和20端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 20 -j ACCEPT</span><br><span class="line"><span class="comment">#如果有其他端口的话，规则也类似，稍微修改上述语句就行</span></span><br><span class="line"><span class="comment">#允许ping</span></span><br><span class="line">iptables -A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT</span><br><span class="line"><span class="comment">#禁止其他未允许的规则访问</span></span><br><span class="line">iptables -A INPUT -j REJECT  <span class="comment">#（注意：如果22端口未加入允许规则，SSH链接会直接断开。）</span></span><br><span class="line">iptables -A FORWARD -j REJECT</span><br></pre></td></tr></table></figure><h3 id="屏蔽IP"><a href="#屏蔽IP" class="headerlink" title="屏蔽IP"></a>屏蔽IP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#如果只是想屏蔽IP的话“3、开放指定的端口”可以直接跳过。</span></span><br><span class="line"><span class="comment">#屏蔽单个IP的命令是</span></span><br><span class="line">iptables -I INPUT -s 123.45.6.7 -j DROP</span><br><span class="line"><span class="comment">#封整个段即从123.0.0.1到123.255.255.254的命令</span></span><br><span class="line">iptables -I INPUT -s 123.0.0.0/8 -j DROP</span><br><span class="line"><span class="comment">#封IP段即从123.45.0.1到123.45.255.254的命令</span></span><br><span class="line">iptables -I INPUT -s 124.45.0.0/16 -j DROP</span><br><span class="line"><span class="comment">#封IP段即从123.45.6.1到123.45.6.254的命令是</span></span><br><span class="line">iptables -I INPUT -s 123.45.6.0/24 -j DROP</span><br></pre></td></tr></table></figure><h3 id="查看已添加的iptables规则"><a href="#查看已添加的iptables规则" class="headerlink" title="查看已添加的iptables规则"></a>查看已添加的iptables规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">iptables -L -n</span><br><span class="line"><span class="comment">#v：显示详细信息，包括每条规则的匹配包数量和匹配字节数</span></span><br><span class="line"><span class="comment">#x：在 v 的基础上，禁止自动单位换算（K、M） vps侦探</span></span><br><span class="line"><span class="comment">#n：只显示IP地址和端口号，不将ip解析为域名</span></span><br></pre></td></tr></table></figure><h3 id="删除已添加的iptables规则"><a href="#删除已添加的iptables规则" class="headerlink" title="删除已添加的iptables规则"></a>删除已添加的iptables规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将所有iptables以序号标记显示，执行：</span></span><br><span class="line">iptables -L -n --line-numbers</span><br><span class="line"><span class="comment">#比如要删除INPUT里序号为8的规则，执行：</span></span><br><span class="line">iptables -D INPUT 8</span><br></pre></td></tr></table></figure><h3 id="iptables的开机启动及规则保存"><a href="#iptables的开机启动及规则保存" class="headerlink" title="iptables的开机启动及规则保存"></a>iptables的开机启动及规则保存</h3><p>CentOS上可能会存在安装好iptables后，iptables并不开机自启动，要加入开机启动，可以执行一下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --level 345 iptables on</span><br></pre></td></tr></table></figure><p>修改iptables配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables</span><br><span class="line"><span class="comment">#保存规则CentOS上可以执行</span></span><br><span class="line">service iptables save </span><br><span class="line"><span class="comment">#另外更需要注意的是Debian/Ubuntu上iptables是不会保存规则的</span></span><br><span class="line"><span class="comment">#需要按如下步骤进行，让网卡关闭是保存iptables规则，启动时加载iptables规则：</span></span><br><span class="line"><span class="comment">#创建/etc/network/if-post-down.d/iptables 文件，添加如下内容：</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">iptables-save &gt; /etc/iptables.rules</span><br><span class="line"><span class="comment">#执行：chmod +x /etc/network/if-post-down.d/iptables 添加执行权限。</span></span><br><span class="line"><span class="comment">#创建/etc/network/if-pre-up.d/iptables 文件，添加如下内容：</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">iptables-restore &lt; /etc/iptables.rules</span><br><span class="line"><span class="comment">#执行：chmod +x /etc/network/if-pre-up.d/iptables 添加执行权限。</span></span><br></pre></td></tr></table></figure><h3 id="CentOS切换为iptables防火墙"><a href="#CentOS切换为iptables防火墙" class="headerlink" title="CentOS切换为iptables防火墙"></a>CentOS切换为iptables防火墙</h3><p>切换到iptables首先应该关掉默认的firewalld，然后安装iptables服务。</p><p>关闭firewall：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service firewalld stop</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service <span class="comment">#禁止firewall开机启动</span></span><br></pre></td></tr></table></figure><p>安装iptables防火墙服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install iptables-services <span class="comment">#安装</span></span><br></pre></td></tr></table></figure><p>编辑iptables防火墙配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/iptables <span class="comment">#编辑防火墙配置文件</span></span><br><span class="line">service iptables restart <span class="comment">#开启 </span></span><br><span class="line">systemctl <span class="built_in">enable</span> iptables.service <span class="comment">#设置防火墙开机启动</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;安装iptables防火墙&quot;&gt;&lt;a href=&quot;#安装iptables防火墙&quot; class=&quot;headerlink&quot; title=&quot;安装iptables防火墙&quot;&gt;&lt;/a&gt;安装iptables防火墙&lt;/h3&gt;&lt;p&gt;如果没有安装iptables需要先安装，CentOS
      
    
    </summary>
    
      <category term="服务器" scheme="http://140.143.243.43/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="linux" scheme="http://140.143.243.43/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Centos7部署LNMP+SSL服务器</title>
    <link href="http://140.143.243.43/2019/02/16/Centos7%E9%83%A8%E7%BD%B2LNMP-SSL%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://140.143.243.43/2019/02/16/Centos7部署LNMP-SSL服务器/</id>
    <published>2019-02-16T15:32:46.000Z</published>
    <updated>2019-02-16T16:40:16.703Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i <span class="string">"s/SELINUX=enforcing/SELINUX=disabled/"</span> /etc/selinux/config</span><br><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>防火墙配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=80/tcp</span><br><span class="line">firewall-cmd --permanent --add-service=http</span><br><span class="line">firewall-cmd --permanent --add-service=https</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><p>安装nginx rpm包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.el7.ngx.noarch.rpm</span><br></pre></td></tr></table></figure><p>正式安装nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure><p>重启nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>设置开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><h3 id="安装php7"><a href="#安装php7" class="headerlink" title="安装php7"></a>安装php7</h3><p>安装php-fpm的依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install net-tools gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel git gcc wget -y</span><br></pre></td></tr></table></figure><p>安装epel-release</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install epel-release</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm</span><br></pre></td></tr></table></figure><p>正式安装php7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install php71w-fpm php71w-cli php71w-gd php71w-mcrypt php71w-mysql php71w-pear php71w-xml php71w-mbstring php71w-pdo php71w-json php71w-pecl-apcu php71w-pecl-apcu-devel</span><br></pre></td></tr></table></figure><p>查看php版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php -v</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>nginx配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#修改nginx用户，在第 8 行和第 10行，user 和 group 赋值为 nginx。</span></span><br><span class="line">vim /etc/php-fpm.d/www.conf</span><br><span class="line">user = nginx</span><br><span class="line">group = nginx</span><br><span class="line"></span><br><span class="line"><span class="comment">#在第 22 行，确保 php-fpm 运行在指定端口。</span></span><br><span class="line">listen = 127.0.0.1:9000</span><br><span class="line"></span><br><span class="line"><span class="comment">#取消第 366-370 行的注释，启用 php-fpm 的系统环境变量。</span></span><br><span class="line">env[HOSTNAME] = <span class="variable">$HOSTNAME</span></span><br><span class="line">env[PATH] = /usr/<span class="built_in">local</span>/bin:/usr/bin:/bin</span><br><span class="line">env[TMP] = /tmp</span><br><span class="line">env[TMPDIR] = /tmp</span><br><span class="line">env[TEMP] = /tmp</span><br></pre></td></tr></table></figure><p>php配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#新建php缓存文件夹</span></span><br><span class="line">mkdir -p /var/lib/php/session</span><br><span class="line"><span class="comment">#设置文件夹及子目录文件所属用户组</span></span><br><span class="line">chown nginx:nginx -R /var/lib/php/session/</span><br></pre></td></tr></table></figure><p>重启php、nginx,并设置开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start php-fpm</span><br><span class="line">sudo systemctl start nginx</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> php-fpm</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><h3 id="安装mariadb"><a href="#安装mariadb" class="headerlink" title="安装mariadb"></a>安装mariadb</h3><p>安装mariadb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mariadb mariadb-server</span><br></pre></td></tr></table></figure><p>启动并设置mariadb开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br></pre></td></tr></table></figure><h3 id="配置SSL"><a href="#配置SSL" class="headerlink" title="配置SSL"></a>配置SSL</h3><p>创建SSL证书文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /etc/nginx/cert/</span><br></pre></td></tr></table></figure><p>根据私钥pri_key.pem生产一个新的证书请求文件并保存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -x509 -days 365 -nodes -out /etc/nginx/cert/xxx.crt -keyout /etc/nginx/cert/xxx.key</span><br></pre></td></tr></table></figure><p>配置证书目录权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 700 /etc/nginx/cert</span><br><span class="line">chmod 600 /etc/nginx/cert/*</span><br></pre></td></tr></table></figure><p>配置网站目录所属用户组</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/nginx/html/</span><br><span class="line">chown nginx:nginx -R xxx/</span><br></pre></td></tr></table></figure><p>配置虚拟主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/nginx/conf.d/</span><br><span class="line">vim xxx.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.nbdeli.com;</span><br><span class="line">    <span class="built_in">return</span> 301 https://<span class="variable">$server_name</span><span class="variable">$request_uri</span>;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443;</span><br><span class="line">    server_name www.nbdeli.com;</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate /etc/nginx/cert/nbdeli.com.crt;</span><br><span class="line">    ssl_certificate_key /etc/nginx/cert/nbdeli.com.key;</span><br><span class="line">    add_header Strict-Transport-Security <span class="string">"max-age=15768000;</span></span><br><span class="line"><span class="string">    includeSubDomains; preload;"</span>;</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    add_header X-Frame-Options <span class="string">"SAMEORIGIN"</span>;</span><br><span class="line">    add_header X-XSS-Protection <span class="string">"1; mode=block"</span>;</span><br><span class="line">    add_header X-Robots-Tag none;</span><br><span class="line">    add_header X-Download-Options noopen;</span><br><span class="line">    add_header X-Permitted-Cross-Domain-Policies none;</span><br><span class="line">    access_log  /home/wwwlog/<span class="variable">$server_name</span>.access.log  main;</span><br><span class="line">    location = /robots.txt &#123;</span><br><span class="line">       allow all;</span><br><span class="line">       log_not_found off;</span><br><span class="line">       access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">    location = /.well-known/carddav &#123;</span><br><span class="line">      <span class="built_in">return</span> 301 <span class="variable">$scheme</span>://<span class="variable">$host</span>/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line">    location = /.well-known/caldav &#123;</span><br><span class="line">      <span class="built_in">return</span> 301 <span class="variable">$scheme</span>://<span class="variable">$host</span>/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line">    client_max_body_size 512M;</span><br><span class="line">    fastcgi_buffers 64 4K;</span><br><span class="line">    gzip off;</span><br><span class="line">    error_page 403 /core/templates/403.php;</span><br><span class="line">    error_page 404 /core/templates/404.php;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root   /home/wwwroot/<span class="variable">$server_name</span>;</span><br><span class="line">        index  index.html index.htm index.php default.php;</span><br><span class="line">    &#125;</span><br><span class="line">    error_page   500 502 503 504  /50x.html;</span><br><span class="line">    location = /50x.html &#123;</span><br><span class="line">        root   /usr/share/nginx/html;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ \.php$ &#123;</span><br><span class="line">        fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /home/wwwroot/<span class="variable">$server_name</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) &#123;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) &#123;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_split_path_info ^(.+\.php)(/.*)$;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        fastcgi_param PATH_INFO <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">        fastcgi_param HTTPS on;</span><br><span class="line">        fastcgi_param modHeadersAvailable <span class="literal">true</span>;</span><br><span class="line">        fastcgi_param front_controller_active <span class="literal">true</span>;</span><br><span class="line">        fastcgi_intercept_errors on;</span><br><span class="line">        fastcgi_request_buffering off;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ ^/(?:updater|ocs-provider)(?:$|/) &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span>/ =404;</span><br><span class="line">        index index.php;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~* \.(?:css|js)$ &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span> /index.php<span class="variable">$uri</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">        add_header Cache-Control <span class="string">"public, max-age=7200"</span>;</span><br><span class="line">        add_header Strict-Transport-Security <span class="string">"max-age=15768000;</span></span><br><span class="line"><span class="string">        includeSubDomains; preload;"</span>;</span><br><span class="line">        add_header X-Content-Type-Options nosniff;</span><br><span class="line">        add_header X-Frame-Options <span class="string">"SAMEORIGIN"</span>;</span><br><span class="line">        add_header X-XSS-Protection <span class="string">"1; mode=block"</span>;</span><br><span class="line">        add_header X-Robots-Tag none;</span><br><span class="line">        add_header X-Download-Options noopen;</span><br><span class="line">        add_header X-Permitted-Cross-Domain-Policies none;</span><br><span class="line">        access_log off;</span><br><span class="line">     &#125;</span><br><span class="line">     location ~* \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg)$ &#123;</span><br><span class="line">        try_files <span class="variable">$uri</span> /index.php<span class="variable">$uri</span><span class="variable">$is_args</span><span class="variable">$args</span>;</span><br><span class="line">        access_log off;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -t</span><br></pre></td></tr></table></figure><p>配置完nginx,记得重启nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;关闭防火墙&quot;&gt;&lt;a href=&quot;#关闭防火墙&quot; class=&quot;headerlink&quot; title=&quot;关闭防火墙&quot;&gt;&lt;/a&gt;关闭防火墙&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="服务器" scheme="http://140.143.243.43/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="linux" scheme="http://140.143.243.43/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://140.143.243.43/2019/02/15/hello-world/"/>
    <id>http://140.143.243.43/2019/02/15/hello-world/</id>
    <published>2019-02-14T18:17:21.550Z</published>
    <updated>2019-02-14T18:17:21.550Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
